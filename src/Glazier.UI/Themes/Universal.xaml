<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:CascadePass.Glazier.UI"
>

    <!-- Font Sizes -->
    <sys:Double x:Key="FontSize.Tiny">10</sys:Double>
    <sys:Double x:Key="FontSize.Small">12</sys:Double>
    <sys:Double x:Key="FontSize.Medium">14</sys:Double>
    <sys:Double x:Key="FontSize.Large">20</sys:Double>
    <sys:Double x:Key="FontSize.ExtraLarge">22</sys:Double>
    <sys:Double x:Key="FontSize.SubHeader">26</sys:Double>
    <sys:Double x:Key="FontSize.Header">30</sys:Double>
    <sys:Double x:Key="FontSize.Title">40</sys:Double>
    
    <!-- Converter needed for some styles-->
    <local:IsNullOrWhitespaceConverter x:Key="IsNullOrWhitespaceConverter" />

    <Style x:Key="Icon" TargetType="Image">
        <Setter Property="Width" Value="{DynamicResource FontSize.Large}"/>
        <Setter Property="Height" Value="{DynamicResource FontSize.Large}"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Margin" Value="3,0,3,0"/>
    </Style>

    <Style x:Key="CommandTextBoxStyle" TargetType="TextBox">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="3,0,3,0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}"
                                BorderBrush="Transparent"
                                BorderThickness="0">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CommandTextBoxBorder" TargetType="Border">
        <Setter Property="CornerRadius" Value="2" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="Background" Value="White" />

        <Style.Triggers>
            <!-- Change color when Border is hovered -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="CornflowerBlue"/>
            </Trigger>

            <!-- Change color when SearchBox has focus -->
            <DataTrigger Binding="{Binding IsKeyboardFocusWithin, ElementName=SearchBox}" Value="True">
                <Setter Property="BorderBrush" Value="CornflowerBlue"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CommandTextBoxInsetLabelStyle" TargetType="TextBlock">
        <Setter Property="Visibility" Value="Visible"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="Margin" Value="8,0,3,0"/>
        <Setter Property="FontStyle" Value="Italic" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=SearchBox, Path=Text, Converter={StaticResource IsNullOrWhitespaceConverter}}" Value="False">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsKeyboardFocusWithin, ElementName=SearchBox}" Value="True"/>

                    <Condition Binding="{Binding ElementName=SearchBox, Path=Text, Converter={StaticResource IsNullOrWhitespaceConverter}}" Value="False" />
                </MultiDataTrigger.Conditions>

                <Setter Property="Visibility" Value="Collapsed"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    

    <Style x:Key="TransparantButton" TargetType="Button">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style x:Key="NavigationButton" TargetType="Button" BasedOn="{StaticResource TransparantButton}">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
    </Style>


    <Style x:Key="Title" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource FormLabelForeground}" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize.Header}" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style x:Key="SectionTitle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource FormLabelForeground}" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize.Large}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style x:Key="FormLabel" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource FormLabelForeground}" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize.Medium}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>


    <Style x:Key="OuterBorderStyle" TargetType="Border">
        <Setter Property="BorderBrush" Value="{DynamicResource OuterBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0.5"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Padding" Value="10"/>
    </Style>


    <Style x:Key="ImagesBorderStyle" TargetType="Border" BasedOn="{StaticResource OuterBorderStyle}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource FormGroupBorderBrush}"/>
                <Setter Property="Background" Value="{Binding ImageBackgroundBrush}"/>
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ShimmerBorder" TargetType="Border">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="2"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard RepeatBehavior="Forever">
                            <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                        From="Gray" To="White" Duration="0:0:0.6" AutoReverse="True"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                        To="Gray" Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- Color Picker -->
    <Style x:Key="ColorPickerLabel" TargetType="TextBlock">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="MinWidth" Value="25" />
    </Style>

    <Style x:Key="ColorPickerChanelSlider" TargetType="Slider">
        <Setter Property="Minimum" Value="0" />
        <Setter Property="Maximum" Value="255" />
    </Style>

    <Style x:Key="ColorPickerSplotch" TargetType="Border">
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="BorderThickness" Value=".25" />
        <Setter Property="CornerRadius" Value="6" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" Opacity="0" BlurRadius="15" Direction="270" ShadowDepth="10" />
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="Black" Opacity="0.5" BlurRadius="15" Direction="270" ShadowDepth="10" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style TargetType="GridSplitter">
        <Setter Property="Width" Value="30" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="ShowsPreview" Value="True" />
        <Setter Property="Opacity" Value="0"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SplitterBrush}" />
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ToggleButton">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Margin" Value="1"/>

        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonSelectedOutlineBrush}"/>
                <Setter Property="Margin" Value="0"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonSelectedMouseOverBrush}"/>
                <Setter Property="Margin" Value="0"/>
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style x:Key="ToolbarStyle" TargetType="Border">
        <Setter Property="BorderBrush" Value="{DynamicResource ToolbarBorderBrush}" />
        <Setter Property="BorderThickness" Value=".5" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="Background" Value="{DynamicResource ToolbarBackgroundBrush}" />
        <Setter Property="Opacity" Value=".8" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>

    <Style x:Key="AnimatedVisibilityToolbarStyle" BasedOn="{StaticResource ToolbarStyle}" TargetType="Border">
        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
                                    Storyboard.TargetProperty="Opacity"
                                    To="1"
                                    Duration="0:0:0.3"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
                                    Storyboard.TargetProperty="Opacity"
                                    To="0"
                                    Duration="0:0:0.3"
                                    BeginTime="0:0:1"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>






    <DrawingBrush x:Key="CrosshatchBrush" TileMode="Tile" Viewport="0,0,20,20" ViewportUnits="Absolute">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="{DynamicResource CheckerboardBackgroundBrush}">
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry Rect="0,0,20,20"/>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing Brush="{DynamicResource CheckerboardForegroundBrush}">
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry Rect="0,0,10,10"/>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing Brush="{DynamicResource CheckerboardForegroundBrush}">
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry Rect="10,10,10,10"/>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    
    



    <Style TargetType="Slider">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Slider">
                    <Grid>
                        <!-- Track -->
                        <Border x:Name="TrackBorder"
                        Height="4"
                        CornerRadius="2">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <GradientStop Color="#70FFFFFF" Offset="0"/>
                                    <GradientStop Color="#40FFFFFF" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.Effect>
                                <BlurEffect Radius="3"/>
                            </Border.Effect>
                        </Border>

                        <!-- Thumb -->
                        <Track x:Name="PART_Track">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Width="24" Height="24">
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Grid>
                                                <Image Source="/Images/CrystalBall2.ico" />
                                                
                                                <!-- Hover Effect -->
                                                <Grid.Style>
                                                    <Style TargetType="Grid">
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Effect">
                                                                    <Setter.Value>
                                                                        <DropShadowEffect Color="LightBlue" BlurRadius="6"/>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Grid.Style>
                                            </Grid>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- Hover Effect -->
                        <Trigger Property="IsMouseOver" SourceName="TrackBorder" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="TrackBorder"
                                    Storyboard.TargetProperty="Background.(LinearGradientBrush.GradientStops)[0].Color"
                                    To="LightBlue" Duration="0:0:0.3"/>
                                        <ColorAnimation Storyboard.TargetName="TrackBorder"
                                    Storyboard.TargetProperty="Background.(LinearGradientBrush.GradientStops)[1].Color"
                                    To="White" Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <!-- Reverse Effect When Mouse Leaves -->
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="TrackBorder"
                                    Storyboard.TargetProperty="Background.(LinearGradientBrush.GradientStops)[0].Color"
                                    To="#70FFFFFF" Duration="0:0:0.3"/>
                                        <ColorAnimation Storyboard.TargetName="TrackBorder"
                                    Storyboard.TargetProperty="Background.(LinearGradientBrush.GradientStops)[1].Color"
                                    To="#40FFFFFF" Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="Thumb">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="LightBlue" BlurRadius="6" />
                    </Setter.Value>
                </Setter>
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style x:Key="SegmentedRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="1"
                        Padding="8">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MinHeight" Value="100" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource AlgorithmSelectorButtonTextForegroundBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource AlgorithmSelectorCheckedButtonBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource AlgorithmSelectorMouseOverButtonBorderBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>